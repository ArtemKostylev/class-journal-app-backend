type Query {
  _empty: String
}

type Mutation {
  _empty: String
}

type FreezeVersion {
  id: Int
  year: Int
}

type Teacher {
  id: Int!
  name: String
  surname: String
  parent: String
  userId: Int
  relations: [Teacher_Course_Student]
  freezeVersion: FreezeVersion
}

type Subgroup {
  course: Course!
  student: Student!
  subgroup: Int
}

type Group {
  class: Int
  program: String
  relations: [Teacher_Course_Student]
}

type Note {
  id: Int!
  text: String!
  year: Int!
  teacher: Teacher
  course: Course
}

type Consult {
    id: Int!
    date: Date!
    year: Int!
    hours: Float!
    relation: Teacher_Course_Student
}

type GroupConsult {
    teacher: Teacher!
    course: Course!
    id: Int!
    date: Date!
    year: Int!
    subgroup: Int!
    hours: Float!
    class: Int!
    program: String!
}

type Teacher_Course_Student {
    id: Int!
    teacher: Teacher!
    course: Course!
    student: Student
    subgroup: Int
    journalEntry: [JournalEntry]
    quaterMark: [QuaterMark]
    consult: [Consult]
    hours: Int
    archived: Boolean
    freezeVersion: FreezeVersion
}

type JournalEntry {
    id: Int!
    mark: String!
    date: Date!
    relation: Teacher_Course_Student
    replacement: Replacement
}

type QuaterMark {
    id: Int!
    mark: String!
    period: String!
    relation: Teacher_Course_Student
    year: Int
}

scalar Date
scalar Upload
